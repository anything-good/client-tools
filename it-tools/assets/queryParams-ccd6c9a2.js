import{j as x,ch as R,ci as d,bt as j,P as _,cj as p,aT as k,a as M}from"./index-41a18eb3.js";const y=new WeakMap;function O(e,t,i={}){const{mode:n="replace",route:o=x(),router:s=R(),transform:l=a=>a}=i;y.has(s)||y.set(s,new Map);const c=y.get(s);let u=o.query[e];d(()=>{u=void 0});let f;const q=j((a,m)=>(f=m,{get(){return a(),l(u!==void 0?u:p(t))},set(r){u!==r&&(u=r===t||r===null?void 0:r,c.set(e,r===t||r===null?void 0:r),m(),k(()=>{if(c.size===0)return;const g=Object.fromEntries(c.entries());c.clear();const{params:h,query:b,hash:w}=o;s[p(n)]({params:h,query:{...b,...g},hash:w})}))}}));return _(()=>o.query[e],a=>{u=a,f()},{flush:"sync"}),q}const Q={number:{fromQuery:e=>Number(e),toQuery:e=>String(e)},string:{fromQuery:e=>e,toQuery:e=>e},boolean:{fromQuery:e=>e.toLowerCase()==="true",toQuery:e=>e?"true":"false"}};function S({name:e,defaultValue:t}){const n=Q[typeof t]??Q.string,o=O(e,n.toQuery(t));return M({get(){return n.fromQuery(o.value)},set(s){o.value=n.toQuery(s)}})}export{S as u};
